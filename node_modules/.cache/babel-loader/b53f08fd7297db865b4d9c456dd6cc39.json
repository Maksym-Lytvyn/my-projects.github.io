{"ast":null,"code":"var _jsxFileName = \"E:\\\\My_portfolio_projects\\\\react\\\\basic-counter-react\\\\basic-counter-react\\\\src\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport { useState, useEffect } from \"react\";\nimport reportWebVitals from './reportWebVitals';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Counter() {\n  _s();\n\n  const [count, setCount] = useState(0);\n  const [calculation, setCalculation] = useState(0);\n  const clear = '';\n  useEffect(() => {\n    setCalculation(() => count * 2);\n  }, [count]); // <- add the count variable here\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        backgroundColor: \"red\",\n        marginLeft: \"30%\",\n        marginRight: \"30%\",\n        border: \"3px 3px\"\n      },\n      children: [\"Count: \", count]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        backgroundColor: \"red\",\n        marginLeft: \"30%\",\n        marginRight: \"30%\"\n      },\n      children: [\"Calculation: \", calculation]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      style: {\n        backgroundColor: \"red\",\n        marginLeft: \"30%\",\n        marginRight: \"30%\"\n      },\n      onClick: () => setCount(c => c + 1),\n      children: \"\\u0417\\u0431\\u0456\\u043B\\u044C\\u0448\\u0438\\u0442\\u0438\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      style: {\n        backgroundColor: \"red\",\n        marginLeft: \"30%\",\n        marginRight: \"30%\"\n      },\n      onClick: () => setCount(c => c = 0),\n      children: \"\\u041E\\u0447\\u0438\\u0441\\u0442\\u0438\\u0442\\u0438\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      style: {\n        backgroundColor: \"red\",\n        marginLeft: \"30%\",\n        marginRight: \"30%\"\n      },\n      onClick: () => setCount(c => c - 1),\n      children: \"\\u0417\\u043C\\u0435\\u043D\\u0448\\u0438\\u0442\\u0438\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Counter, \"dYqs7xbQwR/GAZLMtMv4/OC24MY=\");\n\n_c = Counter;\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render( /*#__PURE__*/_jsxDEV(React.StrictMode, {\n  children: [/*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(Counter, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 31,\n  columnNumber: 3\n}, this)); // If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\nreportWebVitals();\n\nvar _c;\n\n$RefreshReg$(_c, \"Counter\");","map":{"version":3,"names":["React","ReactDOM","App","useState","useEffect","reportWebVitals","Counter","count","setCount","calculation","setCalculation","clear","backgroundColor","marginLeft","marginRight","border","c","root","createRoot","document","getElementById","render"],"sources":["E:/My_portfolio_projects/react/basic-counter-react/basic-counter-react/src/index.js"],"sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport { useState, useEffect} from \"react\";\nimport reportWebVitals from './reportWebVitals';\n\nfunction Counter() {\n  const [count, setCount] = useState(0);\n  const [calculation, setCalculation] = useState(0);\n  const clear = ''\n\n  useEffect(() => {\n    setCalculation(() => count * 2);\n  }, [count]); // <- add the count variable here\n\n  return (\n    <>\n      <p style={{backgroundColor: \"red\", marginLeft: \"30%\", marginRight: \"30%\", border: \"3px 3px\"}}>Count: {count}</p>\n      <p style={{backgroundColor: \"red\", marginLeft: \"30%\", marginRight: \"30%\"}}>Calculation: {calculation}</p>\n      <button style={{backgroundColor: \"red\", marginLeft: \"30%\", marginRight: \"30%\"}} onClick={() => setCount((c) => c + 1)}>Збільшити</button>\n      <button style={{backgroundColor: \"red\", marginLeft: \"30%\", marginRight: \"30%\"}} onClick={() => setCount((c) => c = 0 ) }>Очистити</button>\n      <button style={{backgroundColor: \"red\", marginLeft: \"30%\", marginRight: \"30%\"}} onClick={() => setCount((c) => c - 1)}>Зменшити</button>\n      \n    </>\n  );\n}\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n    <Counter/>\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,kBAArB;AACA,OAAO,aAAP;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAmC,OAAnC;AACA,OAAOC,eAAP,MAA4B,mBAA5B;;;;AAEA,SAASC,OAAT,GAAmB;EAAA;;EACjB,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAAC,CAAD,CAAlC;EACA,MAAM,CAACM,WAAD,EAAcC,cAAd,IAAgCP,QAAQ,CAAC,CAAD,CAA9C;EACA,MAAMQ,KAAK,GAAG,EAAd;EAEAP,SAAS,CAAC,MAAM;IACdM,cAAc,CAAC,MAAMH,KAAK,GAAG,CAAf,CAAd;EACD,CAFQ,EAEN,CAACA,KAAD,CAFM,CAAT,CALiB,CAOJ;;EAEb,oBACE;IAAA,wBACE;MAAG,KAAK,EAAE;QAACK,eAAe,EAAE,KAAlB;QAAyBC,UAAU,EAAE,KAArC;QAA4CC,WAAW,EAAE,KAAzD;QAAgEC,MAAM,EAAE;MAAxE,CAAV;MAAA,sBAAsGR,KAAtG;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,eAEE;MAAG,KAAK,EAAE;QAACK,eAAe,EAAE,KAAlB;QAAyBC,UAAU,EAAE,KAArC;QAA4CC,WAAW,EAAE;MAAzD,CAAV;MAAA,4BAAyFL,WAAzF;IAAA;MAAA;MAAA;MAAA;IAAA,QAFF,eAGE;MAAQ,KAAK,EAAE;QAACG,eAAe,EAAE,KAAlB;QAAyBC,UAAU,EAAE,KAArC;QAA4CC,WAAW,EAAE;MAAzD,CAAf;MAAgF,OAAO,EAAE,MAAMN,QAAQ,CAAEQ,CAAD,IAAOA,CAAC,GAAG,CAAZ,CAAvG;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAHF,eAIE;MAAQ,KAAK,EAAE;QAACJ,eAAe,EAAE,KAAlB;QAAyBC,UAAU,EAAE,KAArC;QAA4CC,WAAW,EAAE;MAAzD,CAAf;MAAgF,OAAO,EAAE,MAAMN,QAAQ,CAAEQ,CAAD,IAAOA,CAAC,GAAG,CAAZ,CAAvG;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAJF,eAKE;MAAQ,KAAK,EAAE;QAACJ,eAAe,EAAE,KAAlB;QAAyBC,UAAU,EAAE,KAArC;QAA4CC,WAAW,EAAE;MAAzD,CAAf;MAAgF,OAAO,EAAE,MAAMN,QAAQ,CAAEQ,CAAD,IAAOA,CAAC,GAAG,CAAZ,CAAvG;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QALF;EAAA,gBADF;AAUD;;GAnBQV,O;;KAAAA,O;AAqBT,MAAMW,IAAI,GAAGhB,QAAQ,CAACiB,UAAT,CAAoBC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAApB,CAAb;AACAH,IAAI,CAACI,MAAL,eACE,QAAC,KAAD,CAAO,UAAP;EAAA,wBACE,QAAC,GAAD;IAAA;IAAA;IAAA;EAAA,QADF,eAEE,QAAC,OAAD;IAAA;IAAA;IAAA;EAAA,QAFF;AAAA;EAAA;EAAA;EAAA;AAAA,QADF,E,CAOA;AACA;AACA;;AACAhB,eAAe"},"metadata":{},"sourceType":"module"}